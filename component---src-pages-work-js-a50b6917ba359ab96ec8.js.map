{"version":3,"sources":["webpack:///./src/components/ProjectCard.jsx","webpack:///./src/pages/work.js"],"names":["ProjectCardContainer","Link","dimensions","maxwidthTablet","maxwidthMobile","colors","blue500","ProjectCardContent","ProjectCardCategory","grey600","ProjectCardTitle","ProjectCardBlurb","ProjectCardAction","ProjectCardImageContainer","grey200","ProjectCard","category","title","description","thumbnail","uid","to","className","text","RichText","render","src","url","alt","WorkTitle","Work","projects","meta","titleTemplate","name","content","property","author","concat","map","project","i","key","node","project_category","project_title","project_preview_description","project_preview_thumbnail","_meta","data","prismic","allProjects","edges","site","siteMetadata","query"],"mappings":"sLAQMA,EAAuB,YAAOC,OAAP,qBAAH,8PAaHC,IAAWC,eAbR,oDAiBHD,IAAWE,eAjBR,oIA0BXC,IAAOC,QA1BI,qRAgDpBC,EAAqB,YAAO,MAAP,qBAAH,sJAYNF,IAAOC,QAZD,mJAsBDJ,IAAWC,eAtBV,oBA2BlBK,EAAsB,YAAO,KAAP,qBAAH,yBAEdH,IAAOI,QAFO,KAKnBC,EAAmB,YAAO,KAAP,qBAAH,iEAKhBC,EAAmB,YAAO,MAAP,qBAAH,4EAKCT,IAAWC,eALZ,6BAUhBS,EAAoB,YAAO,MAAP,qBAAH,iOAcjBC,EAA4B,YAAO,MAAP,qBAAH,cACfR,IAAOS,QADQ,oJAURZ,IAAWC,eAVH,kMAyBbE,IAAOC,QAzBM,kKAoCNJ,IAAWC,eApCL,0BA0DhBY,IAhBK,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,MAAOC,EAApB,EAAoBA,YAAaC,EAAjC,EAAiCA,UAAWC,EAA5C,EAA4CA,IAA5C,OAClB,YAACpB,EAAD,CAAsBqB,GAAE,SAAWD,GACjC,YAACb,EAAD,CAAoBe,UAAU,sBAC5B,YAACd,EAAD,KAAsBQ,EAAS,GAAGO,MAClC,YAACb,EAAD,KAAmBO,EAAM,GAAGM,MAC5B,YAACZ,EAAD,KAAmBa,WAASC,OAAOP,IACnC,YAACN,EAAD,CAAmBU,UAAU,qBAA7B,WACU,+BAGZ,YAACT,EAAD,CAA2BS,UAAU,6BACnC,mBAAKI,IAAKP,EAAUQ,IAAKC,IAAKX,EAAM,GAAGM,W,6KClKvCM,EAAY,YAAO,KAAP,sBAAH,6CAITC,EAAO,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,KAAb,OACX,8BACE,YAAC,IAAD,CACEf,MAAK,yCACLgB,cAAa,8CACbD,KAAM,CACJ,CACEE,KAAK,cACLC,QAASH,EAAKd,aAEhB,CACEkB,SAAS,WACTD,QAAQ,0CAEV,CACEC,SAAS,iBACTD,QAASH,EAAKd,aAEhB,CACEkB,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,QAASH,EAAKK,QAEhB,CACEH,KAAK,gBACLC,QAASH,EAAKf,OAEhB,CACEiB,KAAK,sBACLC,QAASH,EAAKd,cAEhBoB,OAAON,KAEX,YAAC,IAAD,KACE,YAACH,EAAD,aACA,8BACGE,EAASQ,KAAI,SAACC,EAASC,GAAV,OACZ,YAAC,IAAD,CACEC,IAAKD,EACLzB,SAAUwB,EAAQG,KAAKC,iBACvB3B,MAAOuB,EAAQG,KAAKE,cACpB3B,YAAasB,EAAQG,KAAKG,4BAC1B3B,UAAWqB,EAAQG,KAAKI,0BACxB3B,IAAKoB,EAAQG,KAAKK,MAAM5B,aAQrB,sBAAe,IAAZ6B,EAAW,EAAXA,KACVlB,EAAWkB,EAAKC,QAAQC,YAAYC,MACpCpB,EAAOiB,EAAKI,KAAKC,aACvB,OAAKvB,EAEE,YAACD,EAAD,CAAMC,SAAUA,EAAUC,KAAMA,IAFjB,MASjB,IAAMuB,EAAK","file":"component---src-pages-work-js-a50b6917ba359ab96ec8.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { RichText } from \"prismic-reactjs\";\nimport styled from \"@emotion/styled\";\nimport dimensions from \"styles/dimensions\";\nimport colors from \"styles/colors\";\nimport PropTypes from \"prop-types\";\n\nconst ProjectCardContainer = styled(Link)`\n  display: grid;\n  grid-template-columns: 4fr 7fr;\n  box-shadow: 0px 9px 24px rgba(0, 0, 0, 0.06);\n  margin-bottom: 4em;\n  transition: all 150ms ease-in-out;\n  text-decoration: none;\n  color: currentColor;\n\n  @media (max-width: 950px) {\n    grid-template-columns: 4.5fr 7fr;\n  }\n\n  @media (max-width: ${dimensions.maxwidthTablet}px) {\n    grid-template-columns: 1fr;\n  }\n\n  @media (max-width: ${dimensions.maxwidthMobile}px) {\n    margin-bottom: 2em;\n  }\n\n  &:hover {\n    box-shadow: 0px 9px 24px rgba(0, 0, 0, 0.1);\n    transition: all 150ms ease-in-out;\n\n    .ProjectCardAction {\n      color: ${colors.blue500};\n      transition: all 150ms ease-in-out;\n\n      span {\n        transform: translateX(0px);\n        opacity: 1;\n        transition: transform 150ms ease-in-out;\n      }\n    }\n\n    .ProjectCardContent::before {\n      opacity: 0.02;\n      transition: all 150ms ease-in-out;\n    }\n\n    .ProjectCardImageContainer::before {\n      opacity: 0.2;\n      transition: all 150ms ease-in-out;\n    }\n  }\n`;\n\nconst ProjectCardContent = styled(\"div\")`\n  background: white;\n  padding: 4em 3em 2.25em 3em;\n  position: relative;\n\n  &:before {\n    position: absolute;\n    content: \"\";\n    width: 100%;\n    height: 100%;\n    left: 0;\n    top: 0;\n    background: ${colors.blue500};\n    mix-blend-mode: multiply;\n    opacity: 0;\n    transition: all 150ms ease-in-out;\n  }\n\n  @media (max-width: 950px) {\n    padding: 3.25em 2.5em 2em 2.5em;\n  }\n\n  @media (max-width: ${dimensions.maxwidthTablet}px) {\n    grid-row: 2;\n  }\n`;\n\nconst ProjectCardCategory = styled(\"h6\")`\n  font-weight: 600;\n  color: ${colors.grey600};\n`;\n\nconst ProjectCardTitle = styled(\"h3\")`\n  margin-bottom: 0.5em;\n  margin-top: 0.5em;\n`;\n\nconst ProjectCardBlurb = styled(\"div\")`\n  margin-bottom: 0.5em;\n  margin-top: 0.5em;\n  margin-bottom: 5em;\n\n  @media (max-width: ${dimensions.maxwidthTablet}px) {\n    margin-bottom: 2.5em;\n  }\n`;\n\nconst ProjectCardAction = styled(\"div\")`\n  font-weight: 600;\n  text-decoration: none;\n  color: currentColor;\n  transition: all 150ms ease-in-out;\n\n  span {\n    margin-left: 1em;\n    transform: translateX(-8px);\n    display: inline-block;\n    transition: transform 400ms ease-in-out;\n  }\n`;\n\nconst ProjectCardImageContainer = styled(\"div\")`\n  background: ${colors.grey200};\n  display: flex;\n  justify-content: center;\n  align-items: flex-end;\n  overflow: hidden;\n  position: relative;\n  padding-left: 2em;\n  padding-right: 2em;\n\n  @media (max-width: ${dimensions.maxwidthTablet}px) {\n    padding-top: 3em;\n    max-height: 200px;\n    flex-direction: column;\n    align-items: center;\n    justify-content: flex-start;\n  }\n\n  &:before {\n    position: absolute;\n    content: \"\";\n    width: 100%;\n    height: 100%;\n    left: 0;\n    top: 0;\n    background: ${colors.blue500};\n    mix-blend-mode: multiply;\n    opacity: 0;\n    transition: all 150ms ease-in-out;\n  }\n\n  img {\n    max-width: 400px;\n    width: 100%;\n    box-shadow: 0px 4px 24px rgba(0, 0, 0, 0.04);\n\n    @media (max-width: ${dimensions.maxwidthTablet}px) {\n      max-width: 300px;\n    }\n  }\n`;\n\nconst ProjectCard = ({ category, title, description, thumbnail, uid }) => (\n  <ProjectCardContainer to={`/work/${uid}`}>\n    <ProjectCardContent className=\"ProjectCardContent\">\n      <ProjectCardCategory>{category[0].text}</ProjectCardCategory>\n      <ProjectCardTitle>{title[0].text}</ProjectCardTitle>\n      <ProjectCardBlurb>{RichText.render(description)}</ProjectCardBlurb>\n      <ProjectCardAction className=\"ProjectCardAction\">\n        Details <span>&#8594;</span>\n      </ProjectCardAction>\n    </ProjectCardContent>\n    <ProjectCardImageContainer className=\"ProjectCardImageContainer\">\n      <img src={thumbnail.url} alt={title[0].text} />\n    </ProjectCardImageContainer>\n  </ProjectCardContainer>\n);\n\nexport default ProjectCard;\n\nProjectCard.propTypes = {\n  category: PropTypes.array.isRequired,\n  thumbnail: PropTypes.object.isRequired,\n  title: PropTypes.array.isRequired,\n  description: PropTypes.array.isRequired,\n  uid: PropTypes.string.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport { graphql } from \"gatsby\";\nimport styled from \"@emotion/styled\";\nimport Layout from \"components/Layout\";\nimport ProjectCard from \"components/ProjectCard\";\n\nconst WorkTitle = styled(\"h1\")`\n  margin-bottom: 1em;\n`;\n\nconst Work = ({ projects, meta }) => (\n  <>\n    <Helmet\n      title={`Work | Prist, Gatsby & Prismic Starter`}\n      titleTemplate={`%s | Work | Prist, Gatsby & Prismic Starter`}\n      meta={[\n        {\n          name: `description`,\n          content: meta.description\n        },\n        {\n          property: `og:title`,\n          content: `Work | Prist, Gatsby & Prismic Starter`\n        },\n        {\n          property: `og:description`,\n          content: meta.description\n        },\n        {\n          property: `og:type`,\n          content: `website`\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`\n        },\n        {\n          name: `twitter:creator`,\n          content: meta.author\n        },\n        {\n          name: `twitter:title`,\n          content: meta.title\n        },\n        {\n          name: `twitter:description`,\n          content: meta.description\n        }\n      ].concat(meta)}\n    />\n    <Layout>\n      <WorkTitle>Work</WorkTitle>\n      <>\n        {projects.map((project, i) => (\n          <ProjectCard\n            key={i}\n            category={project.node.project_category}\n            title={project.node.project_title}\n            description={project.node.project_preview_description}\n            thumbnail={project.node.project_preview_thumbnail}\n            uid={project.node._meta.uid}\n          />\n        ))}\n      </>\n    </Layout>\n  </>\n);\n\nexport default ({ data }) => {\n  const projects = data.prismic.allProjects.edges;\n  const meta = data.site.siteMetadata;\n  if (!projects) return null;\n\n  return <Work projects={projects} meta={meta} />;\n};\n\nWork.propTypes = {\n  projects: PropTypes.array.isRequired\n};\n\nexport const query = graphql`\n  {\n    prismic {\n      allProjects {\n        edges {\n          node {\n            project_title\n            project_preview_description\n            project_preview_thumbnail\n            project_category\n            project_post_date\n            _meta {\n              uid\n            }\n          }\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}